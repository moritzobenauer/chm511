### BOX AND UNITS
  units lj
  boundary p p p
###

### NEIGHBOUR LIST
  neighbor 0.3 bin
  neigh_modify every 1 delay 0 check yes
###

### READ INITIAL CONFIGURATION FROM FILE...
#  read_data init.dat
###

### ... or CREATION OF INITIAL CONFIGURATION

  atom_style atomic
  dimension 3

## Definition of the lattice density, determining the size of the unit cell:
  #variable lattice_rho index 0.4984
  variable lattice_rho equal ${rho}

## Creation of the lattice points:
  lattice bcc ${lattice_rho}
##  It is also possible to put the crystal within the box in any orientation, by using the keywork 'orient',
##  or easily define other kinds of unit cell by using other features of the command 'lattice' (see Manual):
#  lattice bcc ${lattice_rho} orient x 1 1 1 orient y -1 1 0 orient z -1 -1 2
## Definition of the region of space where crystal atoms will be generated
##  We want an overall box geometry of 4 by 1 by 1, with 13 unit cells along short axes and 26 along half of the long side
##  (we put 25.999 in order to be sure that 13*13*26*2 atoms will be generated)
  region xtl_volume block 0 25.999 0 13 0 13 units lattice

## Definition of total, crystalline and fluid particles number:
  variable Ntot index 17453
  variable Nxtl index $(13*13*26*2)
  variable Nflu index $(v_Ntot-v_Nxtl)
## Definition of the length of the long side of the box in such a way that the global density is 0.4962\sigma^{-3} (more or less in the middle of the coexistence region)
  variable global_rho index 0.4962
  variable lat_const index $((2/v_lattice_rho)^(1/3))
  variable Lx index $(v_Ntot/v_global_rho/(13*v_lat_const)^2)

## Definition of the region of space where disordered fluid atoms will be generated
  region flu_volume block $(26*v_lat_const) $(v_Lx) 0 $(13*v_lat_const) 0 $(13*v_lat_const) units box

## Creation of the simulation box
  region sim_box block 0 $(v_Lx) 0 $(13*v_lat_const) 0 $(13*v_lat_const) units box
  create_box 1 sim_box

## Generation of the atoms
  variable randseed1 index 1234567890
  create_atoms 1 region xtl_volume units lattice
  create_atoms 1 random $(v_Nflu) ${randseed1} flu_volume
  mass 1 1.0

###

### INTERACTION POTENTIAL
## Definition of parameters
  variable kappaD index 4.0
  variable cutoff index 4.5
  variable eps index 20.0
  variable amplitude equal ${eps}*exp(${kappaD})

## Specification of the potential style and assignment of coefficients
  pair_style yukawa ${kappaD} ${cutoff}
  pair_modify shift yes
  pair_coeff * * ${amplitude}
###

### MINIMIZATION OF ENERGY AND FORCES
## A short minimization cycle is performed, to reduce the initial forces in the configuration before starting molecular dynamics
  minimize 1.0e-2 1.0e-4 1000 1000
###

### THERMODYNAMIC OUTPUT
## Dumping frequency (timesteps)
  thermo 100
## Output format
  thermo_style custom step pe etotal press pxx pyy pzz pxy pxz pyz
  thermo_modify format float %.16g
## In LAMMPS the components of the pressure tensor (pxx,pyy,pzz,pxy,pxz,pyz) are already available as built-in variables
## We refer the reader to the Manual page of the command 'compute pressure' for the details on calculations
###

### THERMOSTAT
## We used the Nos√©-Hoover chains algorithm, a dumping time parameter equal to 2.0\tau, and oscillator chain length equal to 30
## As a rule of thumb, we considered that the dumping parameter should be equivalent to more than ~100 time steps, for a safe numerical integration
  fix md_nvt all nvt temp 1.0 1.0 2.0 tchain 30
## Other algorithms, for instance based on the Andersen thermostat, or the one put forward in J. Chem. Phys. 126, 014101(2007), are equally valid choices
###

### CONFIGURATIONS DUMPING
  dump configurations all atom 5000 configurations.lmp
  dump_modify configurations pbc yes
  dump_modify configurations sort id

#compute myOrder all orientorder/atom
#compute myChunks all chunk/atom bin/1d x lower 1. units box
#fix zOrder all ave/chunk 1 1000 1000 myChunks c_myOrder[1] file orientorder_z_profile_avg.dat
#


#compute         xbins all chunk/atom bin/1d x lower 1. units box
#compute         xbincounts all property/chunk xbins count
#fix             3 all ave/time 10 10 1000 c_xbincounts file xbincounts.dat mode vector


###

### RESTART FILE
  restart 150000 restart.a restart.b
###

### VELOCITIES INITIALIZATION
## We initialize the velocities according to a Maxwell-Boltzmann distribution, with zero momentum of the center of mass
  variable randseed2 index 1123581321
  velocity all create 1.0 $(v_randseed2) mom yes dist gaussian
###

### SIMULATION RUN
## Definition of the integration time step and simulation length
  timestep 0.005
## It is useful to define index variable, since these commands can be overriden by a command-line option -var to change their value without modifying the input script
  #variable prod_steps index 15000
  variable prod_steps equal ${steps}
  run ${prod_steps}
###



### END OF SIMULATION
  undump configurations
  write_data final_${lattice_rho}.init nocoeff
  write_restart	restart_${lattice_rho}.equil

###################################################################
